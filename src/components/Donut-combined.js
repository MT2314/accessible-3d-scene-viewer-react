/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useA11y } from '@react-three/a11y'
import { Html } from '@react-three/drei'


export default function Donut({ ...props }) {
  const shapeRef = useRef()
  const [clicked, setClicked] = useState(false)
  const a11y = useA11y()
  const { nodes, materials } = useGLTF('../../dist/assets/gltf/donut-combined.gltf')

  return (
    <group {...props}
      dispose={null}

    >
      <mesh geometry={nodes.Donut.geometry}
        material={materials['Material.002']}
        position={[0, 0, 0]}
        scale={10}
        ref={shapeRef}
        onClick={(e) => { setClicked(!clicked) }}
      >
        <mesh geometry={nodes.Icing.geometry} material={materials['Material.001']} />

        {clicked || a11y.pressed && (
          <Html distanceFactor={props.labelDistance}>
            <div
              className="content" 
              tabIndex="-1"
            >
              {props.labelContent}
            </div>
          </Html>
        )
        }
      </mesh>
      {/* <mesh geometry={nodes.Sprinkle.geometry} material={materials.Sprinkles} position={[-0.05, 0.05, 0.09]} /> */}
      {/* <mesh geometry={nodes.Sprinkle001.geometry} material={materials.Sprinkles} position={[-0.05, 0.06, 0.09]} />
      <mesh geometry={nodes.Sprinkle002.geometry} material={materials.Sprinkles} position={[-0.06, 0.05, 0.1]} />
      <mesh geometry={nodes.Sprinkle003.geometry} material={materials.Sprinkles} position={[-0.05, 0.06, 0.09]} />
      <mesh geometry={nodes.Sprinkle004.geometry} material={materials.Sprinkles} position={[-0.06, 0.05, 0.09]} /> */}
      {/* <mesh geometry={nodes.Sphere.geometry} material={materials.Material} position={[-0.07, 0.05, 0.09]} /> */}


    </group>
  )
}

useGLTF.preload('../../dist/assets/gltf/donut-combined.gltf')
